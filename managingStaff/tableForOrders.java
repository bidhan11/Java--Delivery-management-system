/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package managingStaff;

import javax.swing.JFrame;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import orders.checkInOrders;
import orders.orderplace;

/**
 *
 * @author bidha
 */
public class tableForOrders extends javax.swing.JFrame {

    /**
     * Creates new form tableForOrders
     */
    public tableForOrders() {
        initComponents();
        allordetable.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        allordetable = new javax.swing.JTable();
        tosearch = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(20, 63, 107));

        jLabel4.setBackground(new java.awt.Color(255, 198, 0));
        jLabel4.setFont(new java.awt.Font("Poppins ExtraBold", 0, 35)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 198, 0));
        jLabel4.setText("ORDERS TABLE");

        back.setBackground(new java.awt.Color(235, 29, 54));
        back.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        back.setForeground(new java.awt.Color(255, 198, 0));
        back.setText("BACK");
        back.setAlignmentX(0.5F);
        back.setBorder(null);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        allordetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DATE", "null", "null", "SNAME", "", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12", "RNAME", "PHONE", "EMAIL", "STREET", "CITY", "MUNICIPALITY", "DISTRICT", "PROVINCE", "LENGTH", "WIDTH", "HEIGHT", "WEIGHT", "FEES", "null", "LOCATION"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        allordetable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allordetableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                allordetableMouseEntered(evt);
            }
        });
        allordetable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                allordetableKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                allordetableKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(allordetable);
        if (allordetable.getColumnModel().getColumnCount() > 0) {
            allordetable.getColumnModel().getColumn(2).setMinWidth(0);
            allordetable.getColumnModel().getColumn(2).setPreferredWidth(0);
            allordetable.getColumnModel().getColumn(2).setMaxWidth(0);
            allordetable.getColumnModel().getColumn(3).setMinWidth(0);
            allordetable.getColumnModel().getColumn(3).setPreferredWidth(0);
            allordetable.getColumnModel().getColumn(3).setMaxWidth(0);
            allordetable.getColumnModel().getColumn(5).setMinWidth(0);
            allordetable.getColumnModel().getColumn(5).setPreferredWidth(0);
            allordetable.getColumnModel().getColumn(5).setMaxWidth(0);
            allordetable.getColumnModel().getColumn(6).setMinWidth(0);
            allordetable.getColumnModel().getColumn(6).setPreferredWidth(0);
            allordetable.getColumnModel().getColumn(6).setMaxWidth(0);
            allordetable.getColumnModel().getColumn(7).setMinWidth(0);
            allordetable.getColumnModel().getColumn(7).setPreferredWidth(0);
            allordetable.getColumnModel().getColumn(7).setMaxWidth(0);
            allordetable.getColumnModel().getColumn(8).setMinWidth(0);
            allordetable.getColumnModel().getColumn(8).setPreferredWidth(0);
            allordetable.getColumnModel().getColumn(8).setMaxWidth(0);
            allordetable.getColumnModel().getColumn(9).setMinWidth(0);
            allordetable.getColumnModel().getColumn(9).setPreferredWidth(0);
            allordetable.getColumnModel().getColumn(9).setMaxWidth(0);
            allordetable.getColumnModel().getColumn(10).setMinWidth(0);
            allordetable.getColumnModel().getColumn(10).setPreferredWidth(0);
            allordetable.getColumnModel().getColumn(10).setMaxWidth(0);
            allordetable.getColumnModel().getColumn(11).setMinWidth(0);
            allordetable.getColumnModel().getColumn(11).setPreferredWidth(0);
            allordetable.getColumnModel().getColumn(11).setMaxWidth(0);
            allordetable.getColumnModel().getColumn(14).setMinWidth(0);
            allordetable.getColumnModel().getColumn(14).setPreferredWidth(0);
            allordetable.getColumnModel().getColumn(14).setMaxWidth(0);
            allordetable.getColumnModel().getColumn(15).setMinWidth(0);
            allordetable.getColumnModel().getColumn(15).setPreferredWidth(0);
            allordetable.getColumnModel().getColumn(15).setMaxWidth(0);
            allordetable.getColumnModel().getColumn(16).setMinWidth(0);
            allordetable.getColumnModel().getColumn(16).setPreferredWidth(0);
            allordetable.getColumnModel().getColumn(16).setMaxWidth(0);
            allordetable.getColumnModel().getColumn(17).setMinWidth(0);
            allordetable.getColumnModel().getColumn(17).setPreferredWidth(0);
            allordetable.getColumnModel().getColumn(17).setMaxWidth(0);
            allordetable.getColumnModel().getColumn(19).setMinWidth(0);
            allordetable.getColumnModel().getColumn(19).setPreferredWidth(0);
            allordetable.getColumnModel().getColumn(19).setMaxWidth(0);
            allordetable.getColumnModel().getColumn(25).setMinWidth(0);
            allordetable.getColumnModel().getColumn(25).setPreferredWidth(0);
            allordetable.getColumnModel().getColumn(25).setMaxWidth(0);
        }

        tosearch.setBackground(new java.awt.Color(246, 245, 77));
        tosearch.setFont(new java.awt.Font("Poppins Light", 1, 18)); // NOI18N
        tosearch.setForeground(new java.awt.Color(0, 0, 0));
        tosearch.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        tosearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tosearchKeyReleased(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 198, 0));
        jLabel5.setFont(new java.awt.Font("Poppins ExtraBold", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 198, 0));
        jLabel5.setText("SEARCH");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(jLabel4)))
                .addGap(0, 286, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tosearch, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(back)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tosearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void searchintable(String str){
        DefaultTableModel model = (DefaultTableModel)allordetable.getModel();
        TableRowSorter<DefaultTableModel> ts=new TableRowSorter<>(model);
       allordetable.setRowSorter(ts);
        ts.setRowFilter(RowFilter.regexFilter(str));
    }
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        this.setVisible(false);
        
    }//GEN-LAST:event_backActionPerformed

    private void allordetableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allordetableMouseClicked
        orderplace showorders=new orderplace();
        showorders.setVisible(true);
        showorders.order.setVisible(false);
        showorders.n1.setVisible(true); showorders.n2.setVisible(true); showorders.n3.setVisible(true);
        showorders.jLabel18.setVisible(true);
        showorders.jLabel8.setVisible(false);
        showorders.date.setVisible(false);
        showorders.jButtonback.setVisible(false);
        showorders.jButtonback1.setVisible(true);
        int index=allordetable.getSelectedRow();
        TableModel model=allordetable.getModel();
        String ID=model.getValueAt(index,0).toString();
        String SNAME=model.getValueAt(index,4).toString();
        String SPHONE=model.getValueAt(index,5).toString();
        String SEMAIL=model.getValueAt(index,6).toString();
        String SSTREET=model.getValueAt(index,7).toString();
        String STOWN=model.getValueAt(index,8).toString();
        String SMUNI=model.getValueAt(index,9).toString();
        String SDISTRICT=model.getValueAt(index,10).toString();
        String SPROVINCE=model.getValueAt(index,11).toString();
        String DATE=model.getValueAt(index,1).toString();
         String MONTH=model.getValueAt(index,2).toString();
          String YEAR=model.getValueAt(index,3).toString();
        String RNAME=model.getValueAt(index,12).toString();
        String RPHONE=model.getValueAt(index,13).toString();
        String REMAIL=model.getValueAt(index,14).toString();
        String RSTREET=model.getValueAt(index,15).toString();
        String RTOWN=model.getValueAt(index,16).toString();
        String RMUNI=model.getValueAt(index,17).toString();
        String RDISTRICT=model.getValueAt(index,18).toString();
        String RPROVINCE=model.getValueAt(index,19).toString();
        String L=model.getValueAt(index,20).toString();
        String B=model.getValueAt(index,21).toString();
        String H=model.getValueAt(index,22).toString();
        String W=model.getValueAt(index,23).toString();
        String FEES=model.getValueAt(index,24).toString();
        String STATUS=model.getValueAt(index,25).toString();
        String LOCATION=model.getValueAt(index,26).toString();
        showorders.pack();
        showorders.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        showorders.id.setText(ID);showorders.id.setEditable(false);
        showorders.date.setText(DATE);showorders.date.setEditable(false);
        showorders.sname.setText(SNAME);showorders.sname.setEditable(false);
        showorders.sphone.setText(SPHONE);showorders.sphone.setEditable(false);
        showorders.semail.setText(SEMAIL);showorders.semail.setEditable(false);
        showorders.sstreet.setText(SSTREET);showorders.sstreet.setEditable(false);
        showorders.n1.setText(DATE);showorders.scity.setEditable(false);
        showorders.n2.setText(MONTH);showorders.scity.setEditable(false);
        showorders.n3.setText(YEAR);showorders.scity.setEditable(false);
        showorders.scity.setText(STOWN);showorders.scity.setEditable(false);
        showorders.sdistrict.setText(SDISTRICT);showorders.sdistrict.setEditable(false);
        showorders.sprovince.setText(SPROVINCE);showorders.sprovince.setEditable(false);
        showorders.rmuni.setText(RMUNI);showorders.rmuni.setEditable(false);
        showorders.rname.setText(RNAME);showorders.rname.setEditable(false);
        showorders.smuni.setText(SMUNI);showorders.smuni.setEditable(false);
        showorders.rphone.setText(RPHONE);showorders.rphone.setEditable(false);
        showorders.remail.setText(REMAIL);showorders.remail.setEditable(false);
        showorders.rstreet.setText(RSTREET);showorders.rcity.setEditable(false);
        showorders.rcity.setText(RTOWN);showorders.rdistrict.setEditable(false);
        showorders.rdistrict.setText(RDISTRICT);showorders.rcity.setEditable(false);
        showorders.rprovince.setText(RPROVINCE);showorders.rprovince.setEditable(false);
        showorders.rmuni.setText(RMUNI);showorders.rmuni.setEditable(false);
        showorders.length.setText(L);showorders.length.setEditable(false);
        showorders.breadth.setText(B);showorders.breadth.setEditable(false);
        showorders.height.setText(H);showorders.height.setEditable(false);
        showorders.weight.setText(W);showorders.weight.setEditable(false);
        showorders.fees.setText(FEES);showorders.fees.setEditable(false);
    }//GEN-LAST:event_allordetableMouseClicked

    private void allordetableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allordetableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_allordetableMouseEntered

    private void allordetableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_allordetableKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_allordetableKeyPressed

    private void allordetableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_allordetableKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_allordetableKeyTyped

    private void tosearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tosearchKeyReleased
        // TODO add your handling code here:
        String searchString=tosearch.getText();
        searchintable(searchString);
    }//GEN-LAST:event_tosearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tableForOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tableForOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tableForOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tableForOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tableForOrders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable allordetable;
    private javax.swing.JButton back;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTextField tosearch;
    // End of variables declaration//GEN-END:variables
}
