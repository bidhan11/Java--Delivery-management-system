/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package deliveryStaff;

import assignment.success;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import managingStaff.edit;
import orders.assignTask;
import orders.orderplace;

/**
 *
 * @author bidha
 */
public class deliverOrders extends javax.swing.JFrame {
String loginid;
    /**
     * Creates new form deliverOrders
     */
   public deliverOrders() throws IOException {
        initComponents();
        tasktable1.setAutoCreateRowSorter(true);
        
    }

    deliverOrders(String loginid) throws IOException {
        initComponents();
        this.loginid=loginid;
        tasktable1.setAutoCreateRowSorter(true);
        test();
    }
public void searchintable(String str){
        DefaultTableModel model = (DefaultTableModel)tasktable1.getModel();
        TableRowSorter<DefaultTableModel> ts=new TableRowSorter<>(model);
       tasktable1.setRowSorter(ts);
        ts.setRowFilter(RowFilter.regexFilter(str));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tasktable1 = new javax.swing.JTable();
        tosearch = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(20, 63, 107));

        jLabel4.setBackground(new java.awt.Color(255, 198, 0));
        jLabel4.setFont(new java.awt.Font("Poppins ExtraBold", 0, 35)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 198, 0));
        jLabel4.setText("DELIVER  ORDERS");

        back.setBackground(new java.awt.Color(235, 29, 54));
        back.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        back.setForeground(new java.awt.Color(255, 198, 0));
        back.setText("BACK");
        back.setAlignmentX(0.5F);
        back.setBorder(null);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        tasktable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "RNAME", "PHONE", "EMAIL", "RSTREET", "RTOWN", "RMUNI", "RDISTRICT", "RPROVINCE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tasktable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tasktable1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tasktable1MouseEntered(evt);
            }
        });
        tasktable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tasktable1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tasktable1KeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(tasktable1);

        tosearch.setBackground(new java.awt.Color(246, 245, 77));
        tosearch.setFont(new java.awt.Font("Poppins Light", 1, 18)); // NOI18N
        tosearch.setForeground(new java.awt.Color(0, 0, 0));
        tosearch.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        tosearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tosearchKeyReleased(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 198, 0));
        jLabel5.setFont(new java.awt.Font("Poppins ExtraBold", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 198, 0));
        jLabel5.setText("SEARCH");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(160, 160, 160)
                .addComponent(jLabel4)
                .addContainerGap(281, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tosearch, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(back))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tosearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO2 add your handling code here:
        this.setVisible(false);
         new manageTasks(loginid).setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void tasktable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tasktable1MouseClicked

    try {
        int index=tasktable1.getSelectedRow();
            TableModel model=tasktable1.getModel();
            String orderID=model.getValueAt(index,0).toString();
            search(orderID);
       
    } catch (IOException ex) {
        Logger.getLogger(deliverOrders.class.getName()).log(Level.SEVERE, null, ex);
    } 
    }//GEN-LAST:event_tasktable1MouseClicked

    private void tasktable1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tasktable1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tasktable1MouseEntered

    private void tasktable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tasktable1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tasktable1KeyPressed

    private void tasktable1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tasktable1KeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_tasktable1KeyTyped

    private void tosearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tosearchKeyReleased
        // TODO add your handling code here:
        String searchString=tosearch.getText();
        searchintable(searchString);
    }//GEN-LAST:event_tosearchKeyReleased
    public void search(String oid) throws FileNotFoundException{
                boolean found=false;  
                x=new Scanner(new File("C:\\Users\\bidha\\OneDrive\\Documents\\NetBeansProjects\\hw1\\src\\main\\java\\orders\\orderdetails.txt"));
                x.useDelimiter("[,\n]");
                while(x.hasNext()&&!found){
                    String ID=x.next();
                    String DATE=  x.next(); 
                    String SNAME=x.next();
                    String SPHONE=x.next();   
                    String SEMAIL=   x.next();  
                    String SSTREET=  x.next();  
                    String STOWN=   x.next(); 
                    String SMUNI=   x.next(); 
                    String SDISTRICT=  x.next(); 
                    String SPROVINCE=  x.next();  
                    String RNAME=   x.next(); 
                    String RPHONE=   x.next(); 
                    String REMAIL=   x.next(); 
                    String RSTREET=  x.next(); 
                    String RTOWN=   x.next(); 
                    String RMUNI=   x.next(); 
                    String RDISTRICT=   x.next(); 
                    String RPROVINCE=   x.next(); 
                    String L=  x.next(); 
                    String B=   x.next(); 
                    String H=   x.next(); 
                    String W=   x.next(); 
                    String FEES=   x.next(); 
                    String STATUS=  x.next();  
                    String LOCATION=   x.next(); 
                    if(ID.equals(oid)){
                            orderplace showorders=new orderplace();
                            showorders.setVisible(true);
                            showorders.pack();
                            showorders.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                            showorders.order.setVisible(false);
                            showorders.deliveredbutton.setVisible(true);
                            showorders.jButtonback1.setVisible(true);
                            showorders.jButtonback.setVisible(false);
                            showorders.id.setText(ID);showorders.id.setEditable(false);
                            showorders.date.setText(DATE);showorders.date.setEditable(false);
                            showorders.sname.setText(SNAME);showorders.sname.setEditable(false);
                            showorders.sphone.setText(SPHONE);showorders.sphone.setEditable(false);
                            showorders.semail.setText(SEMAIL);showorders.semail.setEditable(false);
                            showorders.sstreet.setText(SSTREET);showorders.sstreet.setEditable(false);
                            showorders.scity.setText(STOWN);showorders.scity.setEditable(false);
                            showorders.sdistrict.setText(SDISTRICT);showorders.sdistrict.setEditable(false);
                            showorders.sprovince.setText(SPROVINCE);showorders.sprovince.setEditable(false);
                            showorders.rmuni.setText(RMUNI);showorders.rmuni.setEditable(false);
                            showorders.rname.setText(RNAME);showorders.rname.setEditable(false);
                            showorders.smuni.setText(SMUNI);showorders.smuni.setEditable(false);
                            showorders.rphone.setText(RPHONE);showorders.rphone.setEditable(false);
                            showorders.remail.setText(REMAIL);showorders.remail.setEditable(false);
                            showorders.rstreet.setText(RSTREET);showorders.rcity.setEditable(false);
                            showorders.rcity.setText(RTOWN);showorders.rdistrict.setEditable(false);
                            showorders.rdistrict.setText(RDISTRICT);showorders.rcity.setEditable(false);
                            showorders.rprovince.setText(RPROVINCE);showorders.rprovince.setEditable(false);
                            showorders.rmuni.setText(RMUNI);showorders.rmuni.setEditable(false);
                            showorders.length.setText(L);showorders.length.setEditable(false);
                            showorders.breadth.setText(B);showorders.breadth.setEditable(false);
                            showorders.height.setText(H);showorders.height.setEditable(false);
                            showorders.weight.setText(W);showorders.weight.setEditable(false);
                            showorders.fees.setText(FEES);showorders.fees.setEditable(false);
                            
                    }
                }x.close();
                
    }
    private Scanner x;
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(deliverOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(deliverOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(deliverOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(deliverOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new deliverOrders().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(deliverOrders.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    
      public void test() throws IOException{
          acceptOrders test=new acceptOrders(loginid,"accepted",tasktable1);
      }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable tasktable1;
    public javax.swing.JTextField tosearch;
    // End of variables declaration//GEN-END:variables
}
