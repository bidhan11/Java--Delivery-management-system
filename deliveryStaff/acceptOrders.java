/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package deliveryStaff;

import assignment.error;
import assignment.success;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import managingStaff.edit;
import orders.assignTask;

/**
 *
 * @author bidha
 */
public final class acceptOrders extends javax.swing.JFrame {
String order;
String loginId;
    /**
     * Creates new form acceptOrders
     */
    public acceptOrders() throws IOException {
        initComponents();
        tasktable.setAutoCreateRowSorter(true);
    }
    acceptOrders(String loginid,String keyword,JTable tablename) throws IOException {
        initComponents();
        this.loginId=loginid;
        fillTable(loginId,keyword,tablename);
        tasktable.setAutoCreateRowSorter(true);
    }
    acceptOrders(String loginid,String keyword) throws IOException {
        initComponents();
        this.loginId=loginid;
        fillTable(loginId,keyword,tasktable);
        tasktable.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tasktable = new javax.swing.JTable();
        ACCEPT = new javax.swing.JButton();
        back1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        tosearch = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(20, 63, 107));

        jLabel4.setBackground(new java.awt.Color(255, 198, 0));
        jLabel4.setFont(new java.awt.Font("Poppins ExtraBold", 0, 35)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 198, 0));
        jLabel4.setText("ACCEPT  ORDERS");

        back.setBackground(new java.awt.Color(235, 29, 54));
        back.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        back.setForeground(new java.awt.Color(255, 198, 0));
        back.setText("BACK");
        back.setAlignmentX(0.5F);
        back.setBorder(null);
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        tasktable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "RNAME", "PHONE", "EMAIL", "RSTREET", "RTOWN", "RMUNI", "RDISTRICT", "RPROVINCE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tasktable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tasktableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tasktableMouseEntered(evt);
            }
        });
        tasktable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tasktableKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tasktableKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(tasktable);

        ACCEPT.setBackground(new java.awt.Color(255, 183, 43));
        ACCEPT.setFont(new java.awt.Font("Poppins SemiBold", 0, 18)); // NOI18N
        ACCEPT.setText("ACCEPT");
        ACCEPT.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        ACCEPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ACCEPTActionPerformed(evt);
            }
        });

        back1.setBackground(new java.awt.Color(235, 29, 54));
        back1.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        back1.setForeground(new java.awt.Color(255, 198, 0));
        back1.setText("DENY");
        back1.setAlignmentX(0.5F);
        back1.setBorder(null);
        back1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back1ActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 198, 0));
        jLabel5.setFont(new java.awt.Font("Poppins ExtraBold", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 198, 0));
        jLabel5.setText("SEARCH");

        tosearch.setBackground(new java.awt.Color(246, 245, 77));
        tosearch.setFont(new java.awt.Font("Poppins Light", 1, 18)); // NOI18N
        tosearch.setForeground(new java.awt.Color(0, 0, 0));
        tosearch.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        tosearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tosearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addComponent(ACCEPT, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(back1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(160, 160, 160)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tosearch, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(back))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tosearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ACCEPT, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO2 add your handling code here:
        this.setVisible(false);
        new manageTasks(loginId).setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void tasktableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tasktableMouseClicked

                
    }//GEN-LAST:event_tasktableMouseClicked

    private void tasktableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tasktableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tasktableMouseEntered

    private void tasktableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tasktableKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tasktableKeyPressed

    private void tasktableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tasktableKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tasktableKeyTyped

    private void ACCEPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ACCEPTActionPerformed
        try {
            // TODO add your handling code here:
        int index=tasktable.getSelectedRow();
        TableModel model=tasktable.getModel();
        order=model.getValueAt(index,0).toString();
        assignTask accept=new assignTask();
        accept.editdetails("accepted",order);
        edit(order,"accepted");
        new success().setVisible(true);
        } catch (IOException ex) {
            new error().setVisible(true);
            Logger.getLogger(acceptOrders.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_ACCEPTActionPerformed

    private Scanner y;
    public void edit(String oid,String keyword) throws IOException{
        assignTask accept=new assignTask();
        String selectedOID,selectedRname,selectedPhone,selectedEmail,selectedStreet,selectedCity,selectedMuni,selectedDis,selectedProvince;
        String theID,selectedfname,selectedsname,selectednum,selectedemail,date1,status1,location;
        String tempFile="C:\\Users\\bidha\\OneDrive\\Documents\\NetBeansProjects\\hw1\\src\\main\\java\\orders\\temp.txt";
        String path="C:\\Users\\bidha\\OneDrive\\Documents\\NetBeansProjects\\hw1\\src\\main\\java\\orders\\deliverydetails.txt";
        File oldFile1 = new File(path);
       File newFile=new File(tempFile);
       FileWriter fw;
       fw = new FileWriter(tempFile,true);
       BufferedWriter bw=new BufferedWriter(fw);
       try(PrintWriter pw = new PrintWriter(bw)){;
       y=new Scanner(new File(path));
       y.useDelimiter("[,\n]");
       while(y.hasNext()){
                   selectedOID=y.next();selectedRname=y.next();                  
                   selectedPhone=y.next();selectedEmail=y.next();
                   selectedStreet=y.next();selectedCity=y.next();
                   selectedMuni=y.next();selectedDis=y.next();
                   selectedProvince=y.next();theID=y.next();
                   selectedfname=y.next();selectedsname=y.next();
                   selectednum=y.next();selectedemail=y.next();
                   date1=y.next();status1=y.next();
                   if(oid.equals(selectedOID)){
                  
                    pw.print(selectedOID+","+selectedRname+","+selectedPhone+","+selectedEmail+","+selectedStreet+","+
                    selectedCity+","+selectedMuni+","+selectedDis+","+selectedProvince+","+theID+","+
                    selectedfname+","+selectedsname+","+selectednum+","+selectedemail+","+accept.sendDate()+","+keyword+"\n");
                   }
                   else{
                       pw.print(selectedOID+","+selectedRname+","+selectedPhone+","+selectedEmail+","+selectedStreet+","+
                    selectedCity+","+selectedMuni+","+selectedDis+","+selectedProvince+","+theID+","+
                    selectedfname+","+selectedsname+","+selectednum+","+selectedemail+","+date1+","+status1+"\n");
                   }
                   
       }
        y.close();
        pw.flush(); }
        oldFile1.delete();
        File dump=new File(path);
        newFile.renameTo(dump);
        
    }
    private void back1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back1ActionPerformed
   
    try {
        int index=tasktable.getSelectedRow();
        TableModel model=tasktable.getModel();
        order=model.getValueAt(index,0).toString();
        delete(order);
    } catch (IOException ex) {
        new success().setVisible(true);
        Logger.getLogger(acceptOrders.class.getName()).log(Level.SEVERE, null, ex);
    }
       
       
    }//GEN-LAST:event_back1ActionPerformed

    private void tosearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tosearchKeyReleased
        // TODO add your handling code here:
        String searchString=tosearch.getText();
        searchintable(searchString);
    }//GEN-LAST:event_tosearchKeyReleased
    public void searchintable(String str){
        DefaultTableModel model = (DefaultTableModel)tasktable.getModel();
        TableRowSorter<DefaultTableModel> ts=new TableRowSorter<>(model);
       tasktable.setRowSorter(ts);
        ts.setRowFilter(RowFilter.regexFilter(str));
    }
    public void fillTable(String id, String keyword, JTable tablename) throws FileNotFoundException, IOException{
        removerow();
       
        String filePath ="C:\\Users\\bidha\\OneDrive\\Documents\\NetBeansProjects\\hw1\\src\\main\\java\\orders\\deliverydetails.txt";
        File file = new File(filePath);
        FileReader fr = new FileReader(filePath);
       BufferedReader br = new BufferedReader(fr);
        DefaultTableModel model = (DefaultTableModel)tablename.getModel();
        Object[] lines = br.lines().toArray();
    for (Object line : lines) {
        String[] row = line.toString().split(",");
        if(row[9].equals(id)&&row[15].equals(keyword)){
            model.addRow(row);
        }
        br.close();
        fr.close();
    }}
      public void removerow(){
         DefaultTableModel tbl=(DefaultTableModel)tasktable.getModel();
        int torem=tasktable.getRowCount();
        for (int i=torem-1;i>=0;i--){
            tbl.removeRow(i);
        }
    }
      public void delete(String ord) throws IOException{
        String selectedOID,selectedRname,selectedPhone,selectedEmail,selectedStreet,selectedCity,selectedMuni,selectedDis,selectedProvince;
        String theID,selectedfname,selectedsname,selectednum,selectedemail,date1,status1;
        String tempFile="C:\\Users\\bidha\\OneDrive\\Documents\\NetBeansProjects\\hw1\\src\\main\\java\\managingStaff\\temp.txt";
        String delFile="C:\\Users\\bidha\\OneDrive\\Documents\\NetBeansProjects\\hw1\\src\\main\\java\\managingStaff\\delu.txt";
          try {
                FileWriter fw=new FileWriter(tempFile,true);FileWriter fw1=new FileWriter(delFile,true);
                BufferedWriter bw=new BufferedWriter(fw);BufferedWriter bw1=new BufferedWriter(fw1);
                PrintWriter pw=new PrintWriter(bw);PrintWriter pw1=new PrintWriter(bw1);
                y=new Scanner(new File("C:\\Users\\bidha\\OneDrive\\Documents\\NetBeansProjects\\hw1\\src\\main\\java\\orders\\deliverydetails.txt"));
                y.useDelimiter("[,\n]");
                File newFile=new File(tempFile);
                File newFile2=new File(delFile);
               File oldFile  = new File("C:\\Users\\bidha\\OneDrive\\Documents\\NetBeansProjects\\hw1\\src\\main\\java\\orders\\deliverydetails.txt");
                while(y.hasNext()){
                
                    
                   selectedOID=y.next();selectedRname=y.next();                  
                   selectedPhone=y.next();selectedEmail=y.next();
                   selectedStreet=y.next();selectedCity=y.next();
                   selectedMuni=y.next();selectedDis=y.next();
                   selectedProvince=y.next();theID=y.next();
                   selectedfname=y.next();selectedsname=y.next();
                   selectednum=y.next();selectedemail=y.next();
                   date1=y.next();status1=y.next();
                   if(ord.equals(selectedOID)){
                        pw1.print(selectedOID+","+selectedRname+","+selectedPhone+","+selectedEmail+","+selectedStreet+","+
                    selectedCity+","+selectedMuni+","+selectedDis+","+selectedProvince+","+theID+","+
                    selectedfname+","+selectedsname+","+selectednum+","+selectedemail+","+date1+","+status1+"\n");
                    }
                    else{
                        pw.print(selectedOID+","+selectedRname+","+selectedPhone+","+selectedEmail+","+selectedStreet+","+
                    selectedCity+","+selectedMuni+","+selectedDis+","+selectedProvince+","+theID+","+
                    selectedfname+","+selectedsname+","+selectednum+","+selectedemail+","+date1+","+status1+"\n");
                    }
                }y.close();
                pw.flush();
                pw.close();
                pw1.flush();
                pw1.close();
                oldFile.delete();
                newFile2.delete();
                File dump=new File("C:\\Users\\bidha\\OneDrive\\Documents\\NetBeansProjects\\hw1\\src\\main\\java\\orders\\deliverydetails.txt");
                newFile.renameTo(dump);
                
            } catch (IOException ex) {
                Logger.getLogger(edit.class.getName()).log(Level.SEVERE, null, ex);
            }
      }
        
    
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(acceptOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(acceptOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(acceptOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(acceptOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new acceptOrders().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(acceptOrders.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ACCEPT;
    private javax.swing.JButton back;
    private javax.swing.JButton back1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable tasktable;
    public javax.swing.JTextField tosearch;
    // End of variables declaration//GEN-END:variables
}
